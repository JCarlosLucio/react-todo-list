{"version":3,"sources":["hooks/useInputState.js","reducers/todo.reducer.js","hooks/useLocalStorageReducer.js","contexts/todo.context.js","NewTodoForm.js","hooks/useToggleState.js","EditTodoForm.js","Todo.js","TodoList.js","MadeBy.js","App.js","index.js"],"names":["useInputState","initialVal","useState","state","setState","e","target","value","reducer","action","type","id","uuidv4","task","done","filter","todo","map","updatedTask","Error","useLocalStorageReducer","key","defaultVal","useReducer","JSON","parse","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","defaultTodos","TodosContext","React","createContext","DispatchContext","TodosProvider","props","todoReducer","todos","Provider","children","NewTodoForm","handleChange","reset","useContext","className","onSubmit","preventDefault","htmlFor","placeholder","name","required","onChange","useToggleState","toggleState","EditTodoForm","toggleIsEditing","autoFocus","memo","isEditing","Fragment","onClick","TodoList","MadeBy","link","href","aria-hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f692bce.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction useInputState(initialVal) {\n  const [state, setState] = useState(initialVal);\n\n  const handleChange = (e) => {\n    setState(e.target.value);\n  };\n  const reset = () => {\n    setState('');\n  };\n\n  return [state, handleChange, reset];\n}\n\nexport default useInputState;\n","import { v4 as uuidv4 } from 'uuid';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, { id: uuidv4(), task: action.task, done: false }];\n    case 'DELETE':\n      return state.filter((todo) => todo.id !== action.id);\n    case 'UPDATE':\n      return state.map(\n        (todo) =>\n          todo.id === action.id ? { ...todo, task: action.updatedTask } : todo\n      );\n    case 'TOGGLE_DONE':\n      return state.map(\n        (todo) => (todo.id === action.id ? { ...todo, done: !todo.done } : todo)\n      );\n    default:\n      throw new Error();\n  }\n}\n\nexport default reducer;\n","import { useReducer, useEffect } from 'react';\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let value;\n    try {\n      value = JSON.parse(localStorage.getItem(key) || String(defaultVal));\n    } catch (e) {\n      value = defaultVal;\n    }\n    return value;\n  });\n  // use useEffect to update localStorage when state changes\n  useEffect(\n    () => {\n      localStorage.setItem(key, JSON.stringify(state));\n    },\n    [key, state]\n  );\n\n  return [state, dispatch];\n}\n\nexport default useLocalStorageReducer;\n","import React from 'react';\nimport todoReducer from '../reducers/todo.reducer';\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\n\nconst defaultTodos = [];\n\nexport const TodosContext = React.createContext(defaultTodos);\nexport const DispatchContext = React.createContext();\n\nexport function TodosProvider(props) {\n  const [todos, dispatch] = useLocalStorageReducer(\n    'todos',\n    defaultTodos,\n    todoReducer\n  );\n  return (\n    <TodosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </TodosContext.Provider>\n  );\n}\n","import React, { useContext } from 'react';\nimport useInputState from './hooks/useInputState';\nimport { DispatchContext } from './contexts/todo.context';\nimport './NewTodoForm.css';\n\nfunction NewTodoForm() {\n  const [task, handleChange, reset] = useInputState('');\n  const dispatch = useContext(DispatchContext);\n  return (\n    <form\n      className=\"NewTodoForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        dispatch({ type: 'ADD', task });\n        reset();\n      }}\n    >\n      <label htmlFor=\"newTodo\">New Todo</label>\n      <input\n        type=\"text\"\n        id=\"newTodo\"\n        placeholder=\"New Todo\"\n        name=\"todo\"\n        required={true}\n        value={task}\n        onChange={handleChange}\n      />\n      <button>ADD TODO</button>\n    </form>\n  );\n}\n\nexport default NewTodoForm;\n","import { useState } from 'react';\n\nfunction useToggleState(initialVal = false) {\n  const [state, setState] = useState(initialVal);\n  const toggleState = () => {\n    setState(!state);\n  };\n  return [state, toggleState];\n}\n\nexport default useToggleState;\n","import React, { useContext } from 'react';\nimport useInputState from './hooks/useInputState';\nimport { DispatchContext } from './contexts/todo.context';\nimport './EditTodoForm.css';\n\nfunction EditTodoForm({ id, task, toggleIsEditing }) {\n  const dispatch = useContext(DispatchContext);\n  const [updatedTask, handleChange] = useInputState(task);\n  return (\n    <form\n      className=\"EditTodoForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        dispatch({ type: 'UPDATE', id, updatedTask });\n        toggleIsEditing();\n      }}\n    >\n      <input\n        type=\"text\"\n        name=\"updatedTask\"\n        placeholder=\"Edit Todo\"\n        value={updatedTask}\n        onChange={handleChange}\n        autoFocus\n      />\n      <button>Save</button>\n    </form>\n  );\n}\n\nexport default EditTodoForm;\n","import React, { useContext, memo } from 'react';\nimport useToggleState from './hooks/useToggleState';\nimport EditTodoForm from './EditTodoForm';\nimport { DispatchContext } from './contexts/todo.context';\nimport './Todo.css';\n\nfunction Todo({ id, task, done }) {\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggleIsEditing] = useToggleState(false);\n  return (\n    <div className=\"Todo\">\n      {isEditing ? (\n        <EditTodoForm id={id} task={task} toggleIsEditing={toggleIsEditing} />\n      ) : (\n        <React.Fragment>\n          <li\n            onClick={() => dispatch({ type: 'TOGGLE_DONE', id })}\n            className={done ? 'Todo-todo done' : 'Todo-todo'}\n          >\n            {task}\n          </li>\n          <div className=\"Todo-btns\">\n            <button onClick={toggleIsEditing}>\n              <i className=\"fas fa-pen-square\" />\n            </button>\n            <button onClick={() => dispatch({ type: 'DELETE', id })}>\n              <i className=\"fas fa-times-circle\" />\n            </button>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Todo);\n","import React, { useContext } from 'react';\nimport NewTodoForm from './NewTodoForm';\nimport Todo from './Todo';\nimport { TodosContext } from './contexts/todo.context';\nimport './TodoList.css';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n  return (\n    <div className=\"TodoList\">\n      <div className=\"TodoList-header\">\n        <h1>React Todo List</h1>\n      </div>\n      <NewTodoForm />\n      <ul>\n        {todos.map((todo) => (\n          <Todo\n            key={todo.id}\n            {...todo} // id, task, done\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './MadeBy.css';\n\nfunction MadeBy({ link }) {\n  return (\n    <div className=\"MadeBy\">\n      <a href={link}>\n        Made by Lucio <i className=\"fab fa-github-alt\" aria-hidden=\"true\" />\n      </a>\n    </div>\n  );\n}\n\nexport default MadeBy;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport MadeBy from './MadeBy';\nimport { TodosProvider } from './contexts/todo.context';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <TodosProvider>\n        <TodoList />\n      </TodosProvider>\n      <MadeBy link=\"https://github.com/JCarlosLucio/react-todo-list\" />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}