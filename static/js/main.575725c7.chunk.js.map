{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","index.js"],"names":["NewTodoForm","props","state","todo","handleSubmit","bind","handleChange","evt","preventDefault","this","addTodo","id","uuidv4","done","setState","target","name","value","className","onSubmit","htmlFor","type","placeholder","required","onChange","Component","Todo","isEditing","updatedTodo","handleDeleteTodo","handleUpdateTodo","handleToggleDone","toggleForm","deleteTodo","updateTodo","toggleDone","onClick","TodoList","todos","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","filter","updatedTodos","map","key","App","href","aria-hidden","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.575725c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './NewTodoForm.css';\n\nexport default class NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addTodo({ ...this.state, id: uuidv4(), done: false });\n    this.setState({ todo: '' });\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  }\n  render() {\n    return (\n      <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"newTodo\">New Todo</label>\n        <input\n          type=\"text\"\n          id=\"newTodo\"\n          placeholder=\"New Todo\"\n          name=\"todo\"\n          required={true}\n          value={this.state.todo}\n          onChange={this.handleChange}\n        />\n        <button>ADD TODO</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Todo.css';\n\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      updatedTodo: this.props.todo,\n    };\n    this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\n    this.handleUpdateTodo = this.handleUpdateTodo.bind(this);\n    this.handleToggleDone = this.handleToggleDone.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n  }\n  handleDeleteTodo() {\n    this.props.deleteTodo(this.props.id);\n  }\n  handleUpdateTodo(evt) {\n    evt.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.updatedTodo);\n    this.toggleForm();\n  }\n  handleToggleDone() {\n    this.props.toggleDone(this.props.id);\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  }\n  toggleForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <div className=\"Todo\">\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdateTodo}>\n            <input\n              type=\"text\"\n              name=\"updatedTodo\"\n              placeholder=\"Edit Todo\"\n              value={this.state.updatedTodo}\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </div>\n      );\n    } else {\n      result = (\n        <div className=\"Todo\">\n          <li\n            onClick={this.handleToggleDone}\n            className={this.props.done ? 'Todo-todo done' : 'Todo-todo'}\n          >\n            {this.props.todo}\n          </li>\n          <div className=\"Todo-btns\">\n            <button onClick={this.toggleForm}>\n              <i className=\"fas fa-pen-square\" />\n            </button>\n            <button onClick={this.handleDeleteTodo}>\n              <i className=\"fas fa-times-circle\" />\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n","import React, { Component } from 'react';\nimport NewTodoForm from './NewTodoForm';\nimport Todo from './Todo';\nimport './TodoList.css';\n\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.updateTodo = this.updateTodo.bind(this);\n    this.toggleDone = this.toggleDone.bind(this);\n  }\n\n  componentDidMount() {\n    const storedTodos = JSON.parse(localStorage.getItem('todos'));\n    if (storedTodos) this.setState({ todos: storedTodos });\n  }\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  addTodo(newTodo) {\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  }\n  deleteTodo(id) {\n    this.setState({ todos: this.state.todos.filter((todo) => todo.id !== id) });\n  }\n  updateTodo(id, updatedTodo) {\n    const updatedTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, todo: updatedTodo };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  toggleDone(id) {\n    const updatedTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, done: !todo.done };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <div className=\"TodoList-header\">\n          <h1>React Todo List</h1>\n        </div>\n        <NewTodoForm addTodo={this.addTodo} />\n        <ul>\n          {this.state.todos.map((todo) => (\n            <Todo\n              key={todo.id}\n              id={todo.id}\n              todo={todo.todo}\n              done={todo.done}\n              deleteTodo={this.deleteTodo}\n              updateTodo={this.updateTodo}\n              toggleDone={this.toggleDone}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport TodoList from './TodoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n      <div className=\"App-link\">\n        <a href=\"https://github.com/JCarlosLucio/todo-list\">\n          Made by Lucio <i className=\"fab fa-github-alt\" aria-hidden=\"true\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}